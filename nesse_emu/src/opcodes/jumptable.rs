use crate::opcodes::*;
use crate::Nes;
pub type OpcodeFn = fn(nes: &mut Nes, addressing: u8, cycles: u8, bytes: u8);
pub struct Opcode {
    pub exec: OpcodeFn,
    pub addressing: u8,
    pub cycles: u8,
    pub bytes: u8,
}

impl Opcode {
    #[inline(always)]
    pub fn run(&self, nes: &mut Nes) {
        (self.exec)(nes, self.addressing, self.cycles, self.bytes)
    }
}

pub const opcode_jumptable: [Opcode; 256] = [
    Opcode {
        exec: brk,
        addressing: 0u8,
        cycles: 7u8,
        bytes: 1u8,
    },
    Opcode {
        exec: ora,
        addressing: 0u8,
        cycles: 6u8,
        bytes: 2u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: ora,
        addressing: 0u8,
        cycles: 3u8,
        bytes: 2u8,
    },
    Opcode {
        exec: asl,
        addressing: 0u8,
        cycles: 5u8,
        bytes: 2u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: php,
        addressing: 0u8,
        cycles: 3u8,
        bytes: 1u8,
    },
    Opcode {
        exec: ora,
        addressing: 0u8,
        cycles: 2u8,
        bytes: 2u8,
    },
    Opcode {
        exec: asl,
        addressing: 0u8,
        cycles: 2u8,
        bytes: 1u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: ora,
        addressing: 0u8,
        cycles: 4u8,
        bytes: 3u8,
    },
    Opcode {
        exec: asl,
        addressing: 0u8,
        cycles: 6u8,
        bytes: 3u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: bpl,
        addressing: 0u8,
        cycles: 254u8,
        bytes: 2u8,
    },
    Opcode {
        exec: ora,
        addressing: 0u8,
        cycles: 251u8,
        bytes: 2u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: ora,
        addressing: 0u8,
        cycles: 4u8,
        bytes: 2u8,
    },
    Opcode {
        exec: asl,
        addressing: 0u8,
        cycles: 6u8,
        bytes: 2u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: clc,
        addressing: 0u8,
        cycles: 2u8,
        bytes: 1u8,
    },
    Opcode {
        exec: ora,
        addressing: 0u8,
        cycles: 252u8,
        bytes: 3u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: ora,
        addressing: 0u8,
        cycles: 252u8,
        bytes: 3u8,
    },
    Opcode {
        exec: asl,
        addressing: 0u8,
        cycles: 7u8,
        bytes: 3u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: jsr,
        addressing: 0u8,
        cycles: 6u8,
        bytes: 3u8,
    },
    Opcode {
        exec: and,
        addressing: 0u8,
        cycles: 6u8,
        bytes: 2u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: bit,
        addressing: 0u8,
        cycles: 3u8,
        bytes: 2u8,
    },
    Opcode {
        exec: and,
        addressing: 0u8,
        cycles: 3u8,
        bytes: 2u8,
    },
    Opcode {
        exec: rol,
        addressing: 0u8,
        cycles: 5u8,
        bytes: 2u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: plp,
        addressing: 0u8,
        cycles: 4u8,
        bytes: 1u8,
    },
    Opcode {
        exec: and,
        addressing: 0u8,
        cycles: 2u8,
        bytes: 2u8,
    },
    Opcode {
        exec: rol,
        addressing: 0u8,
        cycles: 2u8,
        bytes: 1u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: bit,
        addressing: 0u8,
        cycles: 4u8,
        bytes: 3u8,
    },
    Opcode {
        exec: and,
        addressing: 0u8,
        cycles: 4u8,
        bytes: 3u8,
    },
    Opcode {
        exec: rol,
        addressing: 0u8,
        cycles: 6u8,
        bytes: 3u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: bmi,
        addressing: 0u8,
        cycles: 254u8,
        bytes: 2u8,
    },
    Opcode {
        exec: and,
        addressing: 0u8,
        cycles: 251u8,
        bytes: 2u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: and,
        addressing: 0u8,
        cycles: 4u8,
        bytes: 2u8,
    },
    Opcode {
        exec: rol,
        addressing: 0u8,
        cycles: 6u8,
        bytes: 2u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: sec,
        addressing: 0u8,
        cycles: 2u8,
        bytes: 1u8,
    },
    Opcode {
        exec: and,
        addressing: 0u8,
        cycles: 252u8,
        bytes: 3u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: and,
        addressing: 0u8,
        cycles: 252u8,
        bytes: 3u8,
    },
    Opcode {
        exec: rol,
        addressing: 0u8,
        cycles: 7u8,
        bytes: 3u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: rti,
        addressing: 0u8,
        cycles: 6u8,
        bytes: 1u8,
    },
    Opcode {
        exec: eor,
        addressing: 0u8,
        cycles: 6u8,
        bytes: 2u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: eor,
        addressing: 0u8,
        cycles: 3u8,
        bytes: 2u8,
    },
    Opcode {
        exec: lsr,
        addressing: 0u8,
        cycles: 5u8,
        bytes: 2u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: pha,
        addressing: 0u8,
        cycles: 3u8,
        bytes: 1u8,
    },
    Opcode {
        exec: eor,
        addressing: 0u8,
        cycles: 2u8,
        bytes: 2u8,
    },
    Opcode {
        exec: lsr,
        addressing: 0u8,
        cycles: 2u8,
        bytes: 1u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: jmp,
        addressing: 0u8,
        cycles: 3u8,
        bytes: 3u8,
    },
    Opcode {
        exec: eor,
        addressing: 0u8,
        cycles: 4u8,
        bytes: 3u8,
    },
    Opcode {
        exec: lsr,
        addressing: 0u8,
        cycles: 6u8,
        bytes: 3u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: bvc,
        addressing: 0u8,
        cycles: 254u8,
        bytes: 2u8,
    },
    Opcode {
        exec: eor,
        addressing: 0u8,
        cycles: 251u8,
        bytes: 2u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: eor,
        addressing: 0u8,
        cycles: 4u8,
        bytes: 2u8,
    },
    Opcode {
        exec: lsr,
        addressing: 0u8,
        cycles: 6u8,
        bytes: 2u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: cli,
        addressing: 0u8,
        cycles: 2u8,
        bytes: 1u8,
    },
    Opcode {
        exec: eor,
        addressing: 0u8,
        cycles: 252u8,
        bytes: 3u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: eor,
        addressing: 0u8,
        cycles: 252u8,
        bytes: 3u8,
    },
    Opcode {
        exec: lsr,
        addressing: 0u8,
        cycles: 7u8,
        bytes: 3u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: rts,
        addressing: 0u8,
        cycles: 6u8,
        bytes: 1u8,
    },
    Opcode {
        exec: adc,
        addressing: 0u8,
        cycles: 6u8,
        bytes: 2u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: adc,
        addressing: 0u8,
        cycles: 3u8,
        bytes: 2u8,
    },
    Opcode {
        exec: ror,
        addressing: 0u8,
        cycles: 5u8,
        bytes: 2u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: pla,
        addressing: 0u8,
        cycles: 4u8,
        bytes: 1u8,
    },
    Opcode {
        exec: adc,
        addressing: 0u8,
        cycles: 2u8,
        bytes: 2u8,
    },
    Opcode {
        exec: ror,
        addressing: 0u8,
        cycles: 2u8,
        bytes: 1u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: jmp,
        addressing: 0u8,
        cycles: 5u8,
        bytes: 3u8,
    },
    Opcode {
        exec: adc,
        addressing: 0u8,
        cycles: 4u8,
        bytes: 3u8,
    },
    Opcode {
        exec: ror,
        addressing: 0u8,
        cycles: 6u8,
        bytes: 3u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: bvs,
        addressing: 0u8,
        cycles: 254u8,
        bytes: 2u8,
    },
    Opcode {
        exec: adc,
        addressing: 0u8,
        cycles: 251u8,
        bytes: 2u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: adc,
        addressing: 0u8,
        cycles: 4u8,
        bytes: 2u8,
    },
    Opcode {
        exec: ror,
        addressing: 0u8,
        cycles: 6u8,
        bytes: 2u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: sei,
        addressing: 0u8,
        cycles: 2u8,
        bytes: 1u8,
    },
    Opcode {
        exec: adc,
        addressing: 0u8,
        cycles: 252u8,
        bytes: 3u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: adc,
        addressing: 0u8,
        cycles: 252u8,
        bytes: 3u8,
    },
    Opcode {
        exec: ror,
        addressing: 0u8,
        cycles: 7u8,
        bytes: 3u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: sta,
        addressing: 0u8,
        cycles: 6u8,
        bytes: 2u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: sty,
        addressing: 0u8,
        cycles: 3u8,
        bytes: 2u8,
    },
    Opcode {
        exec: sta,
        addressing: 0u8,
        cycles: 3u8,
        bytes: 2u8,
    },
    Opcode {
        exec: stx,
        addressing: 0u8,
        cycles: 3u8,
        bytes: 2u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: dey,
        addressing: 0u8,
        cycles: 2u8,
        bytes: 1u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: txa,
        addressing: 0u8,
        cycles: 2u8,
        bytes: 1u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: sty,
        addressing: 0u8,
        cycles: 4u8,
        bytes: 3u8,
    },
    Opcode {
        exec: sta,
        addressing: 0u8,
        cycles: 4u8,
        bytes: 3u8,
    },
    Opcode {
        exec: stx,
        addressing: 0u8,
        cycles: 4u8,
        bytes: 3u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: bcc,
        addressing: 0u8,
        cycles: 254u8,
        bytes: 2u8,
    },
    Opcode {
        exec: sta,
        addressing: 0u8,
        cycles: 6u8,
        bytes: 2u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: sty,
        addressing: 0u8,
        cycles: 4u8,
        bytes: 2u8,
    },
    Opcode {
        exec: sta,
        addressing: 0u8,
        cycles: 4u8,
        bytes: 2u8,
    },
    Opcode {
        exec: stx,
        addressing: 0u8,
        cycles: 4u8,
        bytes: 2u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: tya,
        addressing: 0u8,
        cycles: 2u8,
        bytes: 1u8,
    },
    Opcode {
        exec: sta,
        addressing: 0u8,
        cycles: 5u8,
        bytes: 3u8,
    },
    Opcode {
        exec: txs,
        addressing: 0u8,
        cycles: 2u8,
        bytes: 1u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: sta,
        addressing: 0u8,
        cycles: 5u8,
        bytes: 3u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: ldy,
        addressing: 0u8,
        cycles: 2u8,
        bytes: 2u8,
    },
    Opcode {
        exec: lda,
        addressing: 0u8,
        cycles: 6u8,
        bytes: 2u8,
    },
    Opcode {
        exec: ldx,
        addressing: 0u8,
        cycles: 2u8,
        bytes: 2u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: ldy,
        addressing: 0u8,
        cycles: 3u8,
        bytes: 2u8,
    },
    Opcode {
        exec: lda,
        addressing: 0u8,
        cycles: 3u8,
        bytes: 2u8,
    },
    Opcode {
        exec: ldx,
        addressing: 0u8,
        cycles: 3u8,
        bytes: 2u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: tay,
        addressing: 0u8,
        cycles: 2u8,
        bytes: 1u8,
    },
    Opcode {
        exec: lda,
        addressing: 0u8,
        cycles: 2u8,
        bytes: 2u8,
    },
    Opcode {
        exec: tax,
        addressing: 0u8,
        cycles: 2u8,
        bytes: 1u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: ldy,
        addressing: 0u8,
        cycles: 4u8,
        bytes: 3u8,
    },
    Opcode {
        exec: lda,
        addressing: 0u8,
        cycles: 4u8,
        bytes: 3u8,
    },
    Opcode {
        exec: ldx,
        addressing: 0u8,
        cycles: 4u8,
        bytes: 3u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: bcs,
        addressing: 0u8,
        cycles: 254u8,
        bytes: 2u8,
    },
    Opcode {
        exec: lda,
        addressing: 0u8,
        cycles: 251u8,
        bytes: 2u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: ldy,
        addressing: 0u8,
        cycles: 4u8,
        bytes: 2u8,
    },
    Opcode {
        exec: lda,
        addressing: 0u8,
        cycles: 4u8,
        bytes: 2u8,
    },
    Opcode {
        exec: ldx,
        addressing: 0u8,
        cycles: 4u8,
        bytes: 2u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: clv,
        addressing: 0u8,
        cycles: 2u8,
        bytes: 1u8,
    },
    Opcode {
        exec: lda,
        addressing: 0u8,
        cycles: 252u8,
        bytes: 3u8,
    },
    Opcode {
        exec: tsx,
        addressing: 0u8,
        cycles: 2u8,
        bytes: 1u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: ldy,
        addressing: 0u8,
        cycles: 252u8,
        bytes: 3u8,
    },
    Opcode {
        exec: lda,
        addressing: 0u8,
        cycles: 252u8,
        bytes: 3u8,
    },
    Opcode {
        exec: ldx,
        addressing: 0u8,
        cycles: 252u8,
        bytes: 3u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: cpy,
        addressing: 0u8,
        cycles: 2u8,
        bytes: 2u8,
    },
    Opcode {
        exec: cmp,
        addressing: 0u8,
        cycles: 6u8,
        bytes: 2u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: cpy,
        addressing: 0u8,
        cycles: 3u8,
        bytes: 2u8,
    },
    Opcode {
        exec: cmp,
        addressing: 0u8,
        cycles: 3u8,
        bytes: 2u8,
    },
    Opcode {
        exec: dec,
        addressing: 0u8,
        cycles: 5u8,
        bytes: 2u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: iny,
        addressing: 0u8,
        cycles: 2u8,
        bytes: 1u8,
    },
    Opcode {
        exec: cmp,
        addressing: 0u8,
        cycles: 2u8,
        bytes: 2u8,
    },
    Opcode {
        exec: dex,
        addressing: 0u8,
        cycles: 2u8,
        bytes: 1u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: cpy,
        addressing: 0u8,
        cycles: 4u8,
        bytes: 3u8,
    },
    Opcode {
        exec: cmp,
        addressing: 0u8,
        cycles: 4u8,
        bytes: 3u8,
    },
    Opcode {
        exec: dec,
        addressing: 0u8,
        cycles: 6u8,
        bytes: 3u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: bne,
        addressing: 0u8,
        cycles: 254u8,
        bytes: 2u8,
    },
    Opcode {
        exec: cmp,
        addressing: 0u8,
        cycles: 251u8,
        bytes: 2u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: cmp,
        addressing: 0u8,
        cycles: 4u8,
        bytes: 2u8,
    },
    Opcode {
        exec: dec,
        addressing: 0u8,
        cycles: 6u8,
        bytes: 2u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: cld,
        addressing: 0u8,
        cycles: 2u8,
        bytes: 1u8,
    },
    Opcode {
        exec: cmp,
        addressing: 0u8,
        cycles: 252u8,
        bytes: 3u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: cmp,
        addressing: 0u8,
        cycles: 252u8,
        bytes: 3u8,
    },
    Opcode {
        exec: dec,
        addressing: 0u8,
        cycles: 7u8,
        bytes: 3u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: cpx,
        addressing: 0u8,
        cycles: 2u8,
        bytes: 2u8,
    },
    Opcode {
        exec: sbc,
        addressing: 0u8,
        cycles: 6u8,
        bytes: 2u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: cpx,
        addressing: 0u8,
        cycles: 3u8,
        bytes: 2u8,
    },
    Opcode {
        exec: sbc,
        addressing: 0u8,
        cycles: 3u8,
        bytes: 2u8,
    },
    Opcode {
        exec: inc,
        addressing: 0u8,
        cycles: 5u8,
        bytes: 2u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: inx,
        addressing: 0u8,
        cycles: 2u8,
        bytes: 1u8,
    },
    Opcode {
        exec: sbc,
        addressing: 0u8,
        cycles: 2u8,
        bytes: 2u8,
    },
    Opcode {
        exec: nop,
        addressing: 0u8,
        cycles: 2u8,
        bytes: 1u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: cpx,
        addressing: 0u8,
        cycles: 4u8,
        bytes: 3u8,
    },
    Opcode {
        exec: sbc,
        addressing: 0u8,
        cycles: 4u8,
        bytes: 3u8,
    },
    Opcode {
        exec: inc,
        addressing: 0u8,
        cycles: 6u8,
        bytes: 3u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: beq,
        addressing: 0u8,
        cycles: 254u8,
        bytes: 2u8,
    },
    Opcode {
        exec: sbc,
        addressing: 0u8,
        cycles: 251u8,
        bytes: 2u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: sbc,
        addressing: 0u8,
        cycles: 4u8,
        bytes: 2u8,
    },
    Opcode {
        exec: inc,
        addressing: 0u8,
        cycles: 6u8,
        bytes: 2u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: sed,
        addressing: 0u8,
        cycles: 2u8,
        bytes: 1u8,
    },
    Opcode {
        exec: sbc,
        addressing: 0u8,
        cycles: 252u8,
        bytes: 3u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
    Opcode {
        exec: sbc,
        addressing: 0u8,
        cycles: 252u8,
        bytes: 3u8,
    },
    Opcode {
        exec: inc,
        addressing: 0u8,
        cycles: 7u8,
        bytes: 3u8,
    },
    Opcode {
        exec: placeholder,
        addressing: 0u8,
        cycles: 0u8,
        bytes: 0u8,
    },
];
pub fn placeholder(nes: &mut Nes, addressing: u8, cycles: u8, bytes: u8) {
    println!("opcode not implemented.");
}
